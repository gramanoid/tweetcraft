name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run linter
      run: npm run lint
    
    - name: Run type checking
      run: npm run type-check
    
    - name: Run tests
      run: npm test
    
    - name: Build extension
      run: npm run build
    
    - name: Upload build artifacts
      if: matrix.node-version == '20.x'
      uses: actions/upload-artifact@v3
      with:
        name: extension-dist
        path: dist/

  build-and-release:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js 20.x
      uses: actions/setup-node@v3
      with:
        node-version: '20.x'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build extension
      run: npm run build
    
    - name: Create release zip
      run: |
        cd dist
        zip -r ../tweetcraft-extension.zip .
        cd ..
    
    - name: Get version from manifest
      id: get_version
      run: |
        VERSION=$(node -p "require('./dist/manifest.json').version")
        echo "version=$VERSION" >> $GITHUB_OUTPUT
    
    - name: Create Release
      if: startsWith(github.event.head_commit.message, 'Release v')
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ steps.get_version.outputs.version }}
        release_name: Release v${{ steps.get_version.outputs.version }}
        body: |
          Changes in this Release
          - See commit history for details
        draft: false
        prerelease: false
    
    - name: Upload Release Asset
      if: startsWith(github.event.head_commit.message, 'Release v')
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./tweetcraft-extension.zip
        asset_name: tweetcraft-v${{ steps.get_version.outputs.version }}.zip
        asset_content_type: application/zip