name: Secret Scanning

on:
  push:
    branches: [ main, develop, feature/* ]
  pull_request:
    branches: [ main ]

jobs:
  trufflehog:
    name: TruffleHog Secret Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: TruffleHog OSS
        uses: trufflesecurity/trufflehog@v3.63.1
        with:
          path: ./
          base: ${{ github.event.repository.default_branch }}
          head: HEAD
          extra_args: --debug --only-verified

  gitleaks:
    name: Gitleaks Secret Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Run Gitleaks
        uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  dist-scan:
    name: Scan dist/ folder
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build

      - name: Scan dist/ for secrets
        run: |
          # Install gitleaks
          wget https://github.com/gitleaks/gitleaks/releases/download/v8.18.0/gitleaks_8.18.0_linux_x64.tar.gz
          tar -xzf gitleaks_8.18.0_linux_x64.tar.gz
          chmod +x gitleaks
          
          # Scan dist/ directory
          ./gitleaks detect --source=./dist --no-git --verbose
          
          # Also check for common secret patterns
          if grep -rE '(api[_-]?key|apikey|api_secret|secret[_-]?key|private[_-]?key|access[_-]?token|auth[_-]?token|bearer|sk-[a-zA-Z0-9]{48}|openrouter|exa_)' ./dist --exclude="*.map"; then
            echo "❌ Found potential secrets in dist/"
            exit 1
          else
            echo "✅ No secrets found in dist/"
          fi

  pre-commit-hook:
    name: Setup Instructions
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: Comment PR with pre-commit setup
        uses: actions/github-script@v6
        with:
          script: |
            const comment = `## 🔐 Secret Scanning Active
            
            To prevent secrets from being committed locally, consider setting up a pre-commit hook:
            
            \`\`\`bash
            # Install gitleaks locally
            brew install gitleaks  # macOS
            # or
            wget https://github.com/gitleaks/gitleaks/releases/download/v8.18.0/gitleaks_8.18.0_linux_x64.tar.gz  # Linux
            
            # Add pre-commit hook
            cat > .git/hooks/pre-commit << 'EOF'
            #!/bin/sh
            gitleaks detect --source=. --verbose --redact
            if [ $? -ne 0 ]; then
              echo "❌ Secrets detected! Please remove them before committing."
              exit 1
            fi
            EOF
            chmod +x .git/hooks/pre-commit
            \`\`\`
            `;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            })